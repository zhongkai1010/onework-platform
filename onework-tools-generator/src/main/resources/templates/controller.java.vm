package ${package.Controller};

import org.springframework.web.bind.annotation.RequestMapping;
    #if(${restControllerStyle})
    import org.springframework.web.bind.annotation.RestController;
    #else
    import org.springframework.stereotype.Controller;
    #end
    #if(${superControllerClassPackage})
    import ${superControllerClassPackage};
    #end
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.onework.boot.framework.common.pojo.CommonResult;
import com.onework.boot.framework.common.pojo.PageResult;
import com.onework.boot.framework.mybatis.core.query.LambdaQueryWrapperX;
import com.onework.boot.framework.mybatis.core.util.MyBatisUtils;
import ${package.Controller}.vo.${entity}PageReqVO;
import ${package.Controller}.vo.${entity}ReqVO;
import ${package.Entity}.${entity};
import ${package.Service}.${entity}Service;
import io.swagger.v3.oas.annotations.Operation;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import java.util.List;
/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end
private final ${table.serviceName} service;

public ${table.controllerName}(${table.serviceName} service){
        this.service = service;
}

@Operation(description = "新增或删除", summary = "新增或删除")
@PostMapping("addOrUpdate")
public CommonResult<${entity}> addOrUpdate(@RequestBody ${entity} params) {
    service.saveOrUpdate(params);
    return CommonResult.success(params);
}

@Operation(description = "移除", summary = "移除")
@PostMapping("remove/{id}")
public CommonResult<Boolean> remove(@PathVariable String id) {
    return CommonResult.success(service.removeById(id));
}

@Operation(description = "获取详情", summary = "获取详情")
@GetMapping("get/{id}")
public CommonResult<${entity}> get(@PathVariable String id) {
    return CommonResult.success(service.getById(id));
}

@Operation(description = "查询列表", summary = "查询列表")
@GetMapping("getAll")
public CommonResult<List<${entity}>> getAll(@Validated ${entity}ReqVO reqVO) {
    LambdaQueryWrapperX<${entity}> queryWrapper = new LambdaQueryWrapperX<>();
    List<${entity}> resultData = service.list(queryWrapper);
    return CommonResult.success(resultData);
}

@Operation(description = "分页查询", summary = "分页查询")
@GetMapping("getPageAll")
public CommonResult<PageResult<${entity}>> getPageList(@Validated ${entity}PageReqVO pageReqVO) {

    Page<${entity}> page = MyBatisUtils.buildPage(pageReqVO);
    LambdaQueryWrapperX<${entity}> queryWrapper = new LambdaQueryWrapperX<>();
    long total = service.count(queryWrapper);
    List<${entity}> data = service.list(page, queryWrapper);
    PageResult<${entity}> pageResult = new PageResult<>(data, total);
    return CommonResult.success(pageResult);
}
}
#end
